{"ast":null,"code":"const accessToken = process.env.ACCESS_TOKEN;\nconst config = {\n  // Initialize the payment form elements\n  //TODO: Replace with your sandbox application ID\n  applicationId: 'sandbox-sq0idb-xzTAol0_Mas5ary9uDgpGw',\n  inputClass: 'sq-input',\n  autoBuild: false,\n  // Customize the CSS for SqPaymentForm iframe elements\n  inputStyles: [{\n    fontSize: '16px',\n    lineHeight: '24px',\n    padding: '16px',\n    placeholderColor: '#a0a0a0',\n    backgroundColor: 'transparent'\n  }],\n  // Initialize the credit card placeholders\n  cardNumber: {\n    elementId: 'sq-card-number',\n    placeholder: '•••• •••• •••• ••••'\n  },\n  cvv: {\n    elementId: 'sq-cvv',\n    placeholder: 'CVV'\n  },\n  expirationDate: {\n    elementId: 'sq-expiration-date',\n    placeholder: 'MM/YY'\n  },\n  postalCode: {\n    elementId: 'sq-postal-code',\n    placeholder: 'Postal'\n  },\n  // SqPaymentForm callback functions\n  callbacks: {\n    /*\n    * callback function: cardNonceResponseReceived\n    * Triggered when: SqPaymentForm completes a card nonce request\n    */\n    cardNonceResponseReceived: function (errors, nonce, cardData) {\n      if (errors) {\n        // Log errors from nonce generation to the browser developer console.\n        console.error('Encountered errors:');\n        errors.forEach(function (error) {\n          console.error('  ' + error.message);\n        });\n        alert('Encountered errors, check browser developer console for more details');\n        console.log(\"paymentform error 1\"); // window.location.pathname = \"/errorpage\"\n        // console.log(amount.total);\n\n        return;\n      } // let amount = JSON.parse(localStorage.getItem('state'));\n      //alert(`The generated nonce is:\\n${nonce}`);\n\n\n      fetch('http://localhost:4000/process-payment', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer' + accessToken\n        },\n        body: JSON.stringify({\n          // amount: amount.total,\n          nonce: nonce\n        })\n      }).catch(err => {\n        alert('Network error: ' + err);\n        console.log(\"paymentform error 2\"); //   window.location.pathname = \"/errorpage\"\n      }).then(response => {\n        if (!response.ok) {\n          return response.text().then(errorInfo => Promise.reject(errorInfo));\n        }\n\n        return response.text();\n      }).then(data => {\n        console.log(JSON.stringify(data));\n        alert('Payment completed successfully!'); // localStorage.clear();\n\n        window.location.pathname = '/receipt';\n      }).catch(err => {\n        console.error(err);\n        alert('Payment failed to complete!\\nCheck browser developer console form more details'); //   window.location.pathname = \"/errorpage\"\n\n        console.log(\"paymentform error 3\");\n      });\n    }\n  }\n};\nexport default config;","map":{"version":3,"sources":["/Users/joeylansangan/Desktop/reduxnodesquare/client/src/components/utils/paymentForm.js"],"names":["accessToken","process","env","ACCESS_TOKEN","config","applicationId","inputClass","autoBuild","inputStyles","fontSize","lineHeight","padding","placeholderColor","backgroundColor","cardNumber","elementId","placeholder","cvv","expirationDate","postalCode","callbacks","cardNonceResponseReceived","errors","nonce","cardData","console","error","forEach","message","alert","log","fetch","method","headers","body","JSON","stringify","catch","err","then","response","ok","text","errorInfo","Promise","reject","data","window","location","pathname"],"mappings":"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","sourcesContent":["const accessToken = process.env.ACCESS_TOKEN\n\nconst config = {\n  \n    // Initialize the payment form elements\n    \n    //TODO: Replace with your sandbox application ID\n    applicationId: 'sandbox-sq0idb-xzTAol0_Mas5ary9uDgpGw',\n    inputClass: 'sq-input',\n    autoBuild: false,\n    // Customize the CSS for SqPaymentForm iframe elements\n    inputStyles: [{\n        fontSize: '16px',\n        lineHeight: '24px',\n        padding: '16px',\n        placeholderColor: '#a0a0a0',\n        backgroundColor: 'transparent',\n    }],\n    // Initialize the credit card placeholders\n\n    cardNumber: {\n        elementId: 'sq-card-number', \n        placeholder: '•••• •••• •••• ••••'\n    },\n    cvv: {\n        elementId: 'sq-cvv',\n        placeholder: 'CVV'\n    },\n    expirationDate: {\n        elementId: 'sq-expiration-date',\n        placeholder: 'MM/YY'\n    },\n    postalCode: {\n        elementId: 'sq-postal-code',\n        placeholder: 'Postal'\n    },\n    // SqPaymentForm callback functions\n    callbacks: {\n      \n        /*\n        * callback function: cardNonceResponseReceived\n        * Triggered when: SqPaymentForm completes a card nonce request\n        */\n        cardNonceResponseReceived: function (errors, nonce, cardData) {\n        if (errors) {\n            // Log errors from nonce generation to the browser developer console.\n            console.error('Encountered errors:');\n            errors.forEach(function (error) {\n                console.error('  ' + error.message);\n            });\n            alert('Encountered errors, check browser developer console for more details');\n            \n            console.log(\"paymentform error 1\")\n            // window.location.pathname = \"/errorpage\"\n            // console.log(amount.total);\n\n\n            return;\n        }\n        // let amount = JSON.parse(localStorage.getItem('state'));\n           //alert(`The generated nonce is:\\n${nonce}`);\n           fetch('http://localhost:4000/process-payment', {\n             \n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer' + accessToken,\n              },\n    \n              body: JSON.stringify({\n                \n                // amount: amount.total,\n                nonce: nonce\n              })\n\n            })\n            \n            .catch(err => {\n              alert('Network error: ' + err);\n              console.log(\"paymentform error 2\")\n            //   window.location.pathname = \"/errorpage\"\n            })\n            .then(response => {\n              if (!response.ok) {\n                return response.text().then(errorInfo => Promise.reject(errorInfo));\n              }\n              return response.text();\n            })\n            .then(data => {\n              console.log(JSON.stringify(data));\n              alert('Payment completed successfully!');\n              // localStorage.clear();\n              window.location.pathname = '/receipt'\n            })\n            .catch(err => {\n              console.error(err);\n              alert('Payment failed to complete!\\nCheck browser developer console form more details');\n            //   window.location.pathname = \"/errorpage\"\n              console.log(\"paymentform error 3\")\n            });\n        }\n      }\n      \n}\n\n\nexport default config"]},"metadata":{},"sourceType":"module"}