{"ast":null,"code":"import { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY } from '../actions/action-types/action-types';\nimport Item1 from './assets/img1.png';\nimport Item2 from './assets/img2.png';\nconst initState = {\n  items: [{\n    id: 1,\n    title: 'Diamond Piece',\n    desc: \"It looks like shiny water droplets on top of your skin.\",\n    price: 199,\n    img: Item1\n  }, {\n    id: 2,\n    title: 'Gold Chunk',\n    desc: \"Chubby gold chunk. Will put a smile on any face.\",\n    price: 159,\n    img: Item2\n  }],\n  addedItems: [],\n  total: 0\n};\n\nconst cartReducer = (state = initState, action) => {\n  if (action.type === ADD_TO_CART) {\n    let addedItem = state.items.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += 1;\n      return { ...state,\n        total: state.total + addedItem.price,\n        quantity: state.quantity + 1\n      };\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      let newAddy = 1;\n      let newTotal = state.total + addedItem.price;\n      return { ...state,\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal,\n        quantity: newAddy\n      };\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    let itemToRemove = state.addedItems.find(item => action.id === item.id);\n    let new_items = state.addedItems.filter(item => action.id !== item.id); //calculating the total\n\n    let newRem = 0; // let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\n\n    let newTotal = 0;\n    console.log(itemToRemove);\n    return { ...state,\n      addedItems: new_items,\n      total: newTotal,\n      quantity: newRem\n    };\n  } //INSIDE CART COMPONENT\n\n\n  if (action.type === ADD_QUANTITY) {\n    let addedItem = state.items.find(item => item.id === action.id);\n    {\n      addedItem.quantity += 1;\n      let newAdded = state.quantity + 1;\n      let newTotal = state.total + addedItem.price;\n      return { ...state,\n        total: newTotal,\n        quantity: newAdded\n      };\n    }\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    let addedItem = state.items.find(item => item.id === action.id); //if the qt == 0 then it should be removed\n\n    if (addedItem.quantity === 1) {\n      let new_items = state.addedItems.filter(item => item.id !== action.id);\n      let newTotal = state.total - addedItem.price;\n      return { ...state,\n        addedItems: new_items,\n        total: newTotal\n      };\n    } else {\n      addedItem.quantity -= 1;\n      let newSub = state.quantity - 1;\n      let newTotal = state.total - addedItem.price;\n      return { ...state,\n        total: newTotal,\n        quantity: newSub\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/joeylansangan/Desktop/reduxnodesquare/client/src/components/reducers/cartReducer.js"],"names":["ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","Item1","Item2","initState","items","id","title","desc","price","img","addedItems","total","cartReducer","state","action","type","addedItem","find","item","existed_item","quantity","newAddy","newTotal","itemToRemove","new_items","filter","newRem","console","log","newAdded","newSub"],"mappings":"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","sourcesContent":["import { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY }  from '../actions/action-types/action-types';\n\nimport Item1 from './assets/img1.png';\nimport Item2 from './assets/img2.png';\n\nconst initState = {\n    items: [\n        {id:1,title:'Diamond Piece', desc: \"It looks like shiny water droplets on top of your skin.\", price:199,img:Item1},\n        {id:2,title:'Gold Chunk', desc: \"Chubby gold chunk. Will put a smile on any face.\", price:159,img: Item2},\n    ],\n    addedItems:[],\n    total: 0\n}\nconst cartReducer= (state = initState,action)=>{\n    if(action.type === ADD_TO_CART){\n       let addedItem = state.items.find(item=> item.id === action.id)\n        //check if the action id exists in the addedItems\n       let existed_item = state.addedItems.find(item=> action.id === item.id)\n       if(existed_item)\n       {\n          addedItem.quantity += 1 \n           return{\n              ...state,\n               total: state.total + addedItem.price,\n               quantity: state.quantity + 1\n                }\n        }\n       else{\n          addedItem.quantity = 1; \n          //calculating the total\n          let newAddy = 1\n          let newTotal = state.total + addedItem.price \n          \n          return{\n              ...state,\n              addedItems: [...state.addedItems, addedItem], \n              total : newTotal,\n              quantity: newAddy\n          }\n      }\n    }\n    if(action.type === REMOVE_ITEM){\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\n        \n        //calculating the total\n        let newRem = 0\n        // let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\n        let newTotal = 0\n        console.log(itemToRemove)\n        return{\n            ...state,\n            addedItems: new_items,\n            total: newTotal,\n            quantity: newRem\n        }\n    }\n    //INSIDE CART COMPONENT\n    if(action.type=== ADD_QUANTITY){\n        let addedItem = state.items.find(item=> item.id === action.id)\n    \n        {\n          addedItem.quantity += 1 \n          let newAdded = state.quantity + 1\n          let newTotal = state.total + addedItem.price\n          return{\n              ...state,\n              total: newTotal,\n              quantity: newAdded\n          }\n  \n        }\n    }\n    if(action.type=== SUB_QUANTITY){  \n        let addedItem = state.items.find(item=> item.id === action.id) \n        //if the qt == 0 then it should be removed\n        if(addedItem.quantity === 1){\n            \n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\n            let newTotal = state.total - addedItem.price\n            return{\n                ...state,\n                addedItems: new_items,\n                total: newTotal\n                \n            }\n        }\n        else {\n            addedItem.quantity -= 1\n            let newSub = state.quantity - 1\n            let newTotal = state.total - addedItem.price\n            return{\n                ...state,\n                total: newTotal,\n                quantity: newSub\n            }\n        }\n        \n    }\n    return state;\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}